// <auto-generated />
using System;
using KareAjansi.DAL.Models.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KareAjansi.DAL.Migrations
{
    [DbContext(typeof(KareAjansiContext))]
    partial class KareAjansiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KareAjansi.DAL.Models.Entity.Kategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Fiyat")
                        .HasColumnType("int");

                    b.Property<decimal>("KategoriThree")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kategoriler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ad = "Kategori1",
                            Fiyat = 40,
                            KategoriThree = 0m,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            Ad = "Kategori2",
                            Fiyat = 100,
                            KategoriThree = 0m,
                            Status = 0
                        });
                });

            modelBuilder.Entity("KareAjansi.DAL.Models.Entity.Manken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AyakkabiNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Beden")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cinsiyet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Ehliyet")
                        .HasColumnType("bit");

                    b.Property<string>("GozRengi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KategoriId")
                        .HasColumnType("int");

                    b.Property<string>("Kilo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ozellik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SacRengi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SehirDisiCalisabilmeDurumu")
                        .HasColumnType("bit");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Tel1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YabanciDil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KategoriId");

                    b.ToTable("Mankenler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ad = "Emre",
                            Adres = "Ornek Adres",
                            AyakkabiNo = "42",
                            Beden = "Medium",
                            Cinsiyet = "Bay",
                            Ehliyet = true,
                            GozRengi = "Kahverengi",
                            KategoriId = 1,
                            Kilo = "65",
                            Ozellik = "Ornek Ozellik",
                            SacRengi = "Siyah",
                            SehirDisiCalisabilmeDurumu = true,
                            Soyad = "Bilge",
                            Status = 0,
                            Tel1 = "555-555-5555",
                            Tel2 = "555-555-5556",
                            YabanciDil = "İngilizce"
                        });
                });

            modelBuilder.Entity("KareAjansi.DAL.Models.Entity.Odeme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GunlukUcret")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("KonaklamaUcreti")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MankenId")
                        .HasColumnType("int");

                    b.Property<string>("OdemeTipi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizasyonId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Ucret")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("YemekUcreti")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("MankenId");

                    b.HasIndex("OrganizasyonId");

                    b.ToTable("Odemeler");
                });

            modelBuilder.Entity("KareAjansi.DAL.Models.Entity.Organizasyon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BaslangicTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BitisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GunSayisi")
                        .HasColumnType("int");

                    b.Property<string>("Sehir")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Organizasyonlar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ad = "Ornek Organizasyon",
                            BaslangicTarihi = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BitisTarihi = new DateTime(2023, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firma = "Ornek Firma",
                            GunSayisi = 7,
                            Sehir = "İstanbul",
                            Status = 0
                        });
                });

            modelBuilder.Entity("KareAjansi.DAL.Models.Entity.OrganizasyonManken", b =>
                {
                    b.Property<int>("OrganizasyonId")
                        .HasColumnType("int");

                    b.Property<int>("MankenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("KatilmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrganizasyonId", "MankenId");

                    b.HasIndex("MankenId");

                    b.ToTable("OrganizasyonMankenler");

                    b.HasData(
                        new
                        {
                            OrganizasyonId = 1,
                            MankenId = 1,
                            Id = 1,
                            KatilmaTarihi = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0
                        });
                });

            modelBuilder.Entity("KareAjansi.DAL.Models.Entity.Resim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MankenId")
                        .HasColumnType("int");

                    b.Property<int>("ResimData")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MankenId");

                    b.ToTable("Resimler");
                });

            modelBuilder.Entity("KareAjansi.DAL.Models.Entity.Yorum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MankenId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Yazari")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Yorumu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MankenId");

                    b.ToTable("Yorumlar");
                });

            modelBuilder.Entity("KareAjansi.DAL.Models.Entity.Manken", b =>
                {
                    b.HasOne("KareAjansi.DAL.Models.Entity.Kategori", "Kategori")
                        .WithMany("Mankenler")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("KareAjansi.DAL.Models.Entity.Odeme", b =>
                {
                    b.HasOne("KareAjansi.DAL.Models.Entity.Manken", "Manken")
                        .WithMany("Odemeler")
                        .HasForeignKey("MankenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KareAjansi.DAL.Models.Entity.Organizasyon", "Organizasyon")
                        .WithMany("Odemeler")
                        .HasForeignKey("OrganizasyonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manken");

                    b.Navigation("Organizasyon");
                });

            modelBuilder.Entity("KareAjansi.DAL.Models.Entity.OrganizasyonManken", b =>
                {
                    b.HasOne("KareAjansi.DAL.Models.Entity.Manken", "Manken")
                        .WithMany("OrganizasyonMankenler")
                        .HasForeignKey("MankenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KareAjansi.DAL.Models.Entity.Organizasyon", "Organizasyon")
                        .WithMany("OrganizasyonMankenler")
                        .HasForeignKey("OrganizasyonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manken");

                    b.Navigation("Organizasyon");
                });

            modelBuilder.Entity("KareAjansi.DAL.Models.Entity.Resim", b =>
                {
                    b.HasOne("KareAjansi.DAL.Models.Entity.Manken", "Manken")
                        .WithMany("Resimler")
                        .HasForeignKey("MankenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manken");
                });

            modelBuilder.Entity("KareAjansi.DAL.Models.Entity.Yorum", b =>
                {
                    b.HasOne("KareAjansi.DAL.Models.Entity.Manken", "Manken")
                        .WithMany("yorumlar")
                        .HasForeignKey("MankenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manken");
                });

            modelBuilder.Entity("KareAjansi.DAL.Models.Entity.Kategori", b =>
                {
                    b.Navigation("Mankenler");
                });

            modelBuilder.Entity("KareAjansi.DAL.Models.Entity.Manken", b =>
                {
                    b.Navigation("Odemeler");

                    b.Navigation("OrganizasyonMankenler");

                    b.Navigation("Resimler");

                    b.Navigation("yorumlar");
                });

            modelBuilder.Entity("KareAjansi.DAL.Models.Entity.Organizasyon", b =>
                {
                    b.Navigation("Odemeler");

                    b.Navigation("OrganizasyonMankenler");
                });
#pragma warning restore 612, 618
        }
    }
}
